{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/features.jsx","components/faq.jsx","components/image.jsx","components/gallery.jsx","components/Team.jsx","components/rarity.jsx","components/chart.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","data-toggle","data-target","href","Header","data","title","paragraph","size","Features","map","d","i","icon","text","link","Faq","src","alt","Why","Why2","Image","largeImage","smallImage","data-lightbox-gallery","Gallery","Team","img","name","job","socials1","socials2","Rarity","useState","inputValue","setInputValue","value","onChange","e","target","placeholder","length","filter","item","image","rarity","Chart","App","SmoothScroll","speed","speedAsDuration","landingPageData","setLandingPageData","useEffect","JsonData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.533b2396.chunk.js","sourcesContent":["export const Navigation = (props) => {\r\n  return (\r\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\r\n      <div className='container'>\r\n        <div className='navbar-header'>\r\n          <button\r\n            type='button'\r\n            className='navbar-toggle collapsed'\r\n            data-toggle='collapse'\r\n            data-target='#bs-example-navbar-collapse-1'\r\n          >\r\n            {' '}\r\n            <span className='sr-only'>Toggle navigation</span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n          </button>\r\n          <a className='navbar-brand page-scroll' href='#page-top'>\r\n            SolSantaClaus\r\n          </a>{' '}\r\n        </div>\r\n\r\n        <div\r\n          className='collapse navbar-collapse'\r\n          id='bs-example-navbar-collapse-1'\r\n        >\r\n          <ul className='nav navbar-nav navbar-right'>\r\n            <li>\r\n              <a href='#Faq' className='page-scroll'>\r\n                FAQ\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#features' className='page-scroll'>\r\n                Features\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#chart' className='page-scroll'>\r\n                Chart\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#portfolio' className='page-scroll'>\r\n                Gallery\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#rarity' className='page-scroll'>\r\n                Rarity\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#team' className='page-scroll'>\r\n                Team\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","import {FaTwitter} from \"react-icons/fa\";\r\nimport { FaDiscord } from 'react-icons/fa';\r\n\r\nexport const Header = (props) => {\r\n  return (\r\n    <header id='header'>\r\n      <div className='intro'>\r\n        <div className='overlay'>\r\n          <div className='container'>\r\n            <div className='row'>\r\n              <div className='col-md-8 col-md-offset-2 intro-text'>\r\n                <h1>\r\n                  {props.data ? props.data.title : 'Loading'}\r\n                  <span></span>\r\n                </h1>\r\n                <p id='introText'>{props.data ? props.data.paragraph : 'Loading'}</p>\r\n                <a href=\"https://twitter.com/SolSantaclaus\" className=\"twitter social\"> <FaTwitter size={70} /></a>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <a href=\"https://discord.gg/CyR98CRX\" className=\"discord social\"><FaDiscord size={70}/></a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n","export const Features = (props) => {\r\n  return (\r\n    <div id='features' className='text-center'>\r\n      <div className='container'>\r\n        <div className='col-md-10 col-md-offset-1 section-title'>\r\n          <h2>Features</h2>\r\n        </div>\r\n        <div className='row'>\r\n          {props.data\r\n            ? props.data.map((d, i) => (\r\n                <div key={`${d.title}-${i}`} className='col-md-4'>\r\n                  {' '}\r\n                  <i className={d.icon}></i>\r\n                  <h3>{d.title}</h3>\r\n                  <p>{d.text}</p>\r\n                    <p><a href={d.link}>More info </a></p>\r\n                </div>\r\n              ))\r\n            : 'Loading...'}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export const Faq = (props) => {\r\n    return (\r\n        <div id=\"Faq\"  className='text-center'>\r\n            <div className=\"container\">\r\n                <div className='section-title'>\r\n                    <h2>FAQ</h2>\r\n                    <p>\r\n                        Do you have any question ? Here you can find a summary of our informations.\r\n                    </p>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xs-12 col-md-6\">\r\n                        {\" \"}\r\n                        <img src=\"img/portfolio/santa9.png\" className=\"img-responsive\" alt=\"\"/>{\" \"}\r\n                    </div>\r\n                    <div className=\"col-xs-12 col-md-6\">\r\n                        <div className=\"about-text\">\r\n                            <p>{props.data ? props.data.paragraph : \"loading...\"}</p>\r\n                            <div className=\"list-style\">\r\n                                <div className=\"col-lg-6 col-sm-6 col-xs-12\">\r\n                                    <ul>\r\n                                        {props.data\r\n                                            ? props.data.Why.map((d, i) => (\r\n                                                <li key={`${d}-${i}`}>{d}</li>\r\n                                            ))\r\n                                            : \"loading\"}\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"col-lg-6 col-sm-6 col-xs-12\">\r\n                                    <ul>\r\n                                        {props.data\r\n                                            ? props.data.Why2.map((d, i) => (\r\n                                                <li key={`${d}-${i}`}> {d}</li>\r\n                                            ))\r\n                                            : \"loading\"}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","export const Image = ({ title, largeImage, smallImage }) => {\r\n  return (\r\n    <div className='portfolio-item'>\r\n      <div className='hover-bg'>\r\n        {' '}\r\n        <a\r\n          href={largeImage}\r\n          title={title}\r\n          data-lightbox-gallery='gallery1'\r\n        >\r\n          <div className='hover-text'>\r\n            <h4>{title}</h4>\r\n          </div>\r\n          <img\r\n            src={smallImage}\r\n            className='img-responsive'\r\n            alt={title}\r\n          />{' '}\r\n        </a>{' '}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { Image } from \"./image\";\r\n\r\nexport const Gallery = (props) => {\r\n  return (\r\n    <div id='portfolio' className='text-center'>\r\n      <div className='container'>\r\n        <div className='section-title'>\r\n          <h2>Gallery</h2>\r\n          <p>\r\n            This is only a small part of our SantaClaus team coming up the 23rd December !\r\n          </p>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='portfolio-items'>\r\n            {props.data\r\n              ? props.data.map((d, i) => (\r\n                <div key={`${d.title}-${i}`} className='col-sm-6 col-md-4 col-lg-4'>\r\n                  <Image title={d.title} largeImage={d.largeImage} smallImage={d.smallImage} />\r\n                </div>\r\n              ))\r\n              : 'Loading...'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export const Team = (props) => {\r\n  return (\r\n    <div id='team' className='text-center'>\r\n      <div className='container'>\r\n        <div className='col-md-8 col-md-offset-2 section-title'>\r\n          <h2>Meet the Team</h2>\r\n          <p>\r\n            Our project is intended to be long-term, qualitative and advantageous for the holders. It's important for us that you can trust us. That's why we have decided to dox and introduce ourselves.\r\n          </p>\r\n        </div>\r\n        <div id='row'>\r\n          {props.data\r\n            ? props.data.map((d, i) => (\r\n                <div key={`${d.name}-${i}`} className='col-md-3 col-sm-6 team'>\r\n                  <div className='thumbnail'>\r\n                    {' '}\r\n                    <img src={d.img} alt='...' className='team-img' />\r\n                    <div className='caption'>\r\n                      <h4>{d.name}</h4>\r\n                      <p>{d.job}</p>\r\n                      <p>Twitter:<a href={`https://twitter.com/${d.socials1}`}>{d.socials1}</a></p>\r\n                      {!!d.socials2 &&\r\n                      <p>Instagram:<a href={`https://www.instagram.com/${d.socials2}`}>{d.socials2}</a></p>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : 'loading'}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport const Rarity = (props) => {\r\n\r\n    const [inputValue, setInputValue] = useState();\r\n\r\n    const handleChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div id='rarity' className='text-center'>\r\n            <div className='container'>\r\n                <div className='col-md-8 col-md-offset-2 section-title'>\r\n                    <h2>Rarity</h2>\r\n                    <p>\r\n                        This tool allows you to check the rarity of your Santa by inserting his serial number !\r\n                    </p>\r\n                    <p>\r\n                        (for example you want the rarity of #14, simply insert : 14)\r\n                    </p>\r\n                </div>\r\n\r\n                <div id='row'>\r\n                    <label>\r\n                        <input className=\"rarity-input\" value={inputValue} onChange={handleChange} placeholder=\"241\" />\r\n                    </label>\r\n                    <div className=\"rarity-item\">\r\n                        {inputValue?.length ? props.data.filter((item) => (inputValue?.length ? item.id === inputValue : true))\r\n                                .map((d, i) => (\r\n                                <div className='cards'>\r\n                                    <div className=\"card\">\r\n                                        <img src={d.image}/>\r\n                                        <div className=\"card-body\">\r\n                                            <h2>Santa #{d.id}</h2>\r\n                                            <h3>Rank: {d.rarity}</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                            : ''}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","export const Chart = (props) => {\r\n    return (\r\n        <div id='chart' className='text-center'>\r\n            <div className='container'>\r\n                <div className='col-md-10 col-md-offset-1 section-title'>\r\n                    <h2>$Santa</h2>\r\n                </div>\r\n                <div className='row'>\r\n                    <iframe className=\"iframeSanta\" src=\"https://nomics.com/exchanges/raydium/markets/BimPSEV2PwioDzgFJ91LvvmmbxTZoMM9GDzRGywyFt3m?interval=7d#chart\" title=\"$Santa chart\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { Navigation } from \"./components/navigation\";\r\nimport { Header } from \"./components/header\";\r\nimport { Features } from \"./components/features\";\r\nimport { Faq } from \"./components/faq\";\r\nimport { Gallery } from \"./components/gallery\";\r\nimport { Team } from \"./components/Team\";\r\nimport { Rarity } from \"./components/rarity\";\r\nimport { Chart } from \"./components/chart\";\r\nimport JsonData from \"./data/data.json\";\r\nimport SmoothScroll from \"smooth-scroll\";\r\nimport \"./App.css\";\r\n\r\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\r\n  speed: 1000,\r\n  speedAsDuration: true,\r\n});\r\n\r\nconst App = () => {\r\n  const [landingPageData, setLandingPageData] = useState({});\r\n  useEffect(() => {\r\n    setLandingPageData(JsonData);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <Header data={landingPageData.Header} />\r\n      <Faq data={landingPageData.Faq} />\r\n      <Features data={landingPageData.Features} />\r\n      <Chart/>\r\n      <Gallery data={landingPageData.Gallery}/>\r\n      <Rarity data={landingPageData.Rarity}/>\r\n      <Team data={landingPageData.Team} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}